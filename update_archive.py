import requests
from urllib.parse import urlencode
import re
import csv
import pandas as pd
from pathlib import Path


def identify_missing_incomplete():
    """Identify missing and incomplete Rooster Teeth videos from the Internet Archive
    - Missing video URLs: `data/missing.txt`
    - Incomplete upload URLs: `data/incomplete_rt.txt` and `data/incomplete_archive.txt`
    """
    url = "https://archive.org/services/search/v1/scrape"
    query = {
        'q': 'scanner:"Roosterteeth Website Mirror"',
        'fields': 'identifier,addeddate,item_size,format',
        'count': 10000
    }

    archive_items = []
    incomplete = []

    count = 1
    while True:
        response = requests.get(f"{url}?{urlencode(query)}")
        json = response.json()

        for item in json['items']:
            if (
                "roosterteeth-" in item["identifier"] and
                "roosterteeth-test" not in item["identifier"] and
                "-bonus-bonus" not in item["identifier"]
            ):
                archive_items.append(item["identifier"])

                if not (
                    "MPEG4" in item['format'] and
                    "JSON" in item['format'] and # .info.json file
                    "Unknown" in item['format'] and # .description file
                    (
                        "JPEG" in item['format'] or
                        "PNG" in item['format'] or
                        "Animated GIF" in item['format'] or
                        "JPEG 2000" in item['format']
                    )
                ):
                    incomplete.append(item['identifier'])

        if 'cursor' in json:
            query['cursor'] = json['cursor']
        else:
            break

        count += 1

    print(f"Identified {len(archive_items):,} items from the Internet Archive Scrape API across {count:,} requests")

    with open("data/archive_urls.txt", "r") as fp:
        archive_ids = [line.rstrip().replace("https://archive.org/details/", "") for line in fp]

    with open("data/rt_urls.txt", "r") as fp:
        rt_urls = [line.rstrip() for line in fp]

    archive_items = set(archive_items)
    missing = [x for x in archive_ids if x not in archive_items]
    print(f"Found {len(missing):,} items missing from Internet Archive")
    with open("data/missing.txt", "w") as fp:
        for item in missing:
            fp.write(f"{rt_urls[archive_ids.index(item)]}\n")

    print(f"Found {len(incomplete):,} incomplete items on Internet Archive")
    with open("data/incomplete_rt_urls.txt", "w") as fp:
        for item in incomplete:
            fp.write(f"{rt_urls[archive_ids.index(item)]}\n")
    with open("data/incomplete_archive_urls.txt", "w") as fp:
        for item in incomplete:
            fp.write(f"https://archive.org/details/{item}\n")

    # Update README metrics
    with open("README.md", "r") as fp:
        readme = fp.read()
    readme = re.sub(r"(?<=\* Items on Internet Archive: )([\d, \(.\%\)]+)", f"{len(archive_items):,} ({len(archive_items) / len(rt_urls):.2%})", readme)
    readme = re.sub(r"(?<=\* Items Missing from Internet Archive: )([\d, \(.\%\)]+)", f"{len(missing):,} ({len(missing) / len(rt_urls):.2%})", readme)
    readme = re.sub(r"(?<=\* Incomplete Items on Internet Archive: )([\d,]+)", f"{len(incomplete):,}", readme)
    with open("README.md", "w") as f:
        f.write(readme)

    return missing, incomplete


def generate_checklist(missing, incomplete):
    """Generates CSV file for RT Archival Checklist
    * Requires intermediary file (`data/.temp.csv`) generated by `update_rt.py`
    * Writes output to `data/checklist.csv`

    Columns: title, rt_id, rt_url, show, date, is_first, is_uploaded, is_complete_upload, is_removed
    """
    dark = []  # Removed Archive IDs (Updated daily by update_archive_dark.py)
    with open("data/dark.csv", "r") as fp:
        reader = csv.reader(fp)
        next(reader)  # Skip header
        for row in reader:
            dark.append(row[0].replace("https://archive.org/details/", ""))

    with open("data/.temp.csv", "r") as input, open("data/checklist.csv", "w") as output:
        reader = csv.reader(input)
        writer = csv.writer(output)

        checklist = []
        header = next(reader)
        header.extend(['is_uploaded', 'is_complete_upload', 'is_removed'])
        checklist.append(header)

        for row in reader:
            identifier = f"roosterteeth-{row[1]}"
            is_uploaded = identifier not in missing
            is_complete_upload = is_uploaded and identifier not in incomplete
            is_removed = identifier in dark
            row.extend([is_uploaded, is_complete_upload, is_removed])
            checklist.append(row)

        writer.writerows(checklist)


def generate_website():
    """Generates archive progress website"""
    df = pd.read_csv("data/checklist.csv")
    df_show_slugs = pd.read_csv("data/shows.csv")

    df_shows = df.groupby("show").apply(process_show, df_show_slugs=df_show_slugs, include_groups=False)
    df_shows.sort_index(key=lambda x: x.str.lower(), inplace=True)

    summary = generate_summary(df)

    html_table = df_shows.to_html(index_names=False, index=False, border=0, escape=False,
                                  table_id="showTable", classes="w3-table-all")

    query = {
        'query': f'scanner:"Roosterteeth Website Mirror"',
        'sort': '-date'
    }
    archive_search_url = f"https://archive.org/search?{urlencode(query)}"

    html_string = f"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Rooster Teeth Website Archival Progress</title>
        <link rel="icon" type="image/png" sizes="256x256" href="favicon.png">
        <meta name="description" content="Track the progress of the Rooster Teeth website archival effort">
        <meta name="keywords" content="Rooster Teeth, RT, Archive, Internet Archive, Backup, Archival, Progress">
        <meta name="author" content="shiruken">
        <meta property="og:url" content="https://shiruken.github.io/rt-archive/">
        <meta property="og:type" content="website">
        <meta property="og:title" content="Rooster Teeth Website Archival Progress">
        <meta property="og:description" content="Track the progress of the Rooster Teeth website archival effort">
        <meta property="og:image" content="https://shiruken.github.io/rt-archive/social.png">
        <meta name="twitter:card" content="summary_large_image">
        <meta property="twitter:domain" content="shiruken.github.io">
        <meta property="twitter:url" content="https://shiruken.github.io/rt-archive/">
        <meta name="twitter:title" content="Rooster Teeth Website Archival Progress">
        <meta name="twitter:description" content="Track the progress of the Rooster Teeth website archival effort">
        <meta name="twitter:image" content="https://shiruken.github.io/rt-archive/social.png">
        <link rel="stylesheet" type="text/css" href="w3.css"/>
        <style>
            #showTable th:first-child {{
                width: 570px;
            }}
        </style>
    </head>
    <body>
        <header class="w3-container w3-center">
            <h1>Rooster Teeth Website Archival Progress<h1>
        </header>
        <div class="w3-row w3-center">
            <div class="w3-col s2 w3-blue w3-padding-small">
                <h4>Rooster Teeth Videos</h4>
                <h2>{summary['Videos']:,}</h2>
            </div>
            <div class="w3-col s2 w3-green w3-padding-small">
                <h4>Uploaded to Archive</h4>
                <h2>{summary['Uploaded']:,}</h2>
            </div>
            <div class="w3-col s2 w3-deep-orange w3-text-white w3-padding-small">
                <h4>Missing from Archive</h4>
                <h2>{summary['Missing']:,}</h2>
            </div>
            <div class="w3-col s2 w3-orange w3-text-white w3-padding-small">
                <h4>Incomplete Uploads</h4>
                <h2>{summary['Incomplete']:,}</h2>
            </div>
            <div class="w3-col s2 w3-red w3-padding-small">
                <h4>Removed Uploads</h4>
                <h2>{summary['Removed']:,}</h2>
            </div>
            <div class="w3-col s2 w3-green w3-padding-small">
                <h4>Archive Availability</h4>
                <h2>{summary['Availability']}</h2>
            </div>
        </div>
        <div class="w3-auto">
            <input class="w3-input w3-border w3-padding w3-section w3-half" type="text" placeholder="Filter by Show" id="search" onkeyup="search()">
            {html_table}
            <div class="w3-section w3-padding">
                <a href="{archive_search_url}" target="_blank" class="w3-hover-text-red" data-umami-event="outbound-link-click" data-umami-event-link="{archive_search_url}">Search for all uploads on Internet Archive</a>
            </div>
            <div class="w3-panel w3-border w3-light-grey w3-round-large w3-small">
                <h6>Definitions</h6>
                <ul>
                    <li><b>Videos:</b> Number of videos reported by the Rooster Teeth API</li>
                    <li><b>Uploaded:</b> Number of videos that have been uploaded to Internet Archive</li>
                    <li><b>Missing:</b> Number of videos that have not been uploaded to Internet Archive</li>
                    <li><b>Incomplete:</b> Number of Internet Archive uploads without the expected items</li>
                    <li><b>Removed:</b> Number of Internet Archive uploads that have been removed from the website</li>
                    <li><b>Availability:</b> Percentage of videos that are fully uploaded and available on Internet Archive</li>
                </ul>
            </div>
        </div>
        <div class="w3-container w3-center w3-text-gray">
            <p><a href="https://github.com/shiruken/rt-archive" class="w3-hover-text-red" data-umami-event="outbound-link-click" data-umami-event-link="https://github.com/shiruken/rt-archive">Source Code</a></p>
        </div>
        <script>
            function search() {{
                var input, filter, table, tr, td, i;
                input = document.getElementById("search");
                filter = input.value.toUpperCase();
                table = document.getElementById("showTable");
                tbody = table.getElementsByTagName("tbody")[0];
                tr = tbody.getElementsByTagName("tr");
                for (i = 0; i < tr.length; i++) {{
                    td = tr[i].getElementsByTagName("td")[0];
                    if (td) {{
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {{
                            tr[i].style.display = "";
                        }} else {{
                            tr[i].style.display = "none";
                        }}
                    }}
                }}
            }}
        </script>
        <script defer src="https://u.csullender.com/u.js" data-website-id="43288605-948a-4723-87c1-56c6d8ab63e2" data-domains="shiruken.github.io"></script>
    </body>
    </html>
    """

    with open("docs/index.html", "w") as fp:
        fp.write(html_string)


def generate_summary(df):
    """Generates summary metrics for a dataframe"""
    output = {}
    output['Videos'] = df['rt_id'].count()
    output['Uploaded'] = df['is_uploaded'].sum() + df['is_removed'].sum()
    output['Missing'] = output['Videos'] - output['Uploaded']
    output['Incomplete'] = output['Uploaded'] - df['is_complete_upload'].sum() - df['is_removed'].sum()
    output['Removed'] = df['is_removed'].sum()
    output['Availability'] = f"{(output['Uploaded'] - output['Incomplete'] - output['Removed']) / output['Videos']:.2%}"
    return pd.Series(output, index=list(output.keys()))


def process_show(df, df_show_slugs):
    """Process data for a show"""
    show_title = df.name
    show_slug = df_show_slugs[df_show_slugs['title'] == show_title]['slug'].values[0]
    show_link = f'<a href="{show_slug}" title="View archival status for show" class="w3-hover-text-red">{df.name}</a>'
    summary = generate_summary(df)
    show = pd.concat([pd.Series(show_link, index=["Show"]), summary])
    generate_show_page(df, show_slug)
    return show


def generate_show_page(df, show_slug):
    """Generates show page for archive progress website"""
    show_title = df.name
    summary = generate_summary(df)

    df['FIRST'] = df['is_first'].replace({True: "⭐️", False: ""})
    df['Uploaded'] = (df['is_uploaded'] | df['is_removed']).replace({True: "✅", False: "❌"})
    df['Complete'] = df['is_complete_upload'].replace({True: "✅", False: "❌"})
    df['Removed'] = df['is_removed'].replace({True: "🚨", False: ""})
    df['Complete'] = df['Complete'].where(~df['is_removed'], "❓")

    def make_links(x):
        s = (
            f'<a href="{x["rt_url"]}" target="_blank" title="View on Rooster Teeth" class="w3-hover-text-red" '
            f'data-umami-event="outbound-link-click" data-umami-event-link="{x["rt_url"]}">RT</a>'
        )
        archive_url = f"https://archive.org/details/roosterteeth-{x['rt_id']}"
        if x['is_uploaded']:
            s += (
                f'· <a href="{archive_url}" target="_blank" title="View on Internet Archive" class="w3-hover-text-red" '
                f'data-umami-event="outbound-link-click" data-umami-event-link="{archive_url}">Archive</a>'
            )
        if x['is_removed']:
            s = s.replace(">Archive<", "><s>Archive</s><")
        return s

    df['Links'] = df[['rt_id', 'rt_url', 'is_uploaded', 'is_removed']].apply(make_links, axis=1)

    df.rename(columns={
        "title": "Title",
        "date": "Air Date",
    }, inplace=True)

    df = df[['Title', 'Air Date', 'Links', 'FIRST', 'Uploaded', 'Complete', 'Removed']]
    html_table = df.to_html(index_names=False, index=False, border=0, escape=False,
                            table_id="showTable", classes="w3-table-all")

    query = {
        'query': f'scanner:"Roosterteeth Website Mirror" AND show_title:"{show_title}"',
        'sort': '-date'
    }
    archive_search_url = f"https://archive.org/search?{urlencode(query)}"

    html_string = f"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>{show_title} | Rooster Teeth Website Archival Progress</title>
        <link rel="icon" type="image/png" sizes="256x256" href="favicon.png">
        <meta name="description" content="Track the archival progress of '{show_title}' from the Rooster Teeth website">
        <meta name="keywords" content="{show_title}, Rooster Teeth, RT, Archive, Internet Archive, Backup, Archival, Progress">
        <meta name="author" content="shiruken">
        <meta property="og:url" content="https://shiruken.github.io/rt-archive/{show_slug}/">
        <meta property="og:type" content="website">
        <meta property="og:title" content="{show_title} | Rooster Teeth Website Archival Progress">
        <meta property="og:description" content="Track the archival progress of '{show_title}' from the Rooster Teeth website">
        <meta property="og:image" content="https://shiruken.github.io/rt-archive/social.png">
        <meta name="twitter:card" content="summary_large_image">
        <meta property="twitter:url" content="https://shiruken.github.io/rt-archive/{show_slug}/">
        <meta name="twitter:title" content="{show_title} | Rooster Teeth Website Archival Progress">
        <meta name="twitter:description" content="Track the archival progress of '{show_title}' from the Rooster Teeth website">
        <meta name="twitter:image" content="https://shiruken.github.io/rt-archive/social.png">
        <link rel="stylesheet" type="text/css" href="../w3.css"/>
        <style>
            header a {{
                text-decoration: none;
            }}
            header div.w3-quarter {{
                margin-top: 12px;
            }}
            #showTable th:first-child {{
                width: 570px;
            }}
        </style>
    </head>
    <body>
        <header class="w3-row w3-container">
            <div class="w3-quarter">
                <h4>
                    <a href="../" title="Back to All Shows" class="w3-hover-text-red">&larr; All Shows</a>
                </h4>
            </div>
            <div class="w3-half w3-center">
                <h1>{show_title}<h1>
            </div>
        </header>
        <div class="w3-row w3-center">
            <div class="w3-col s2 w3-blue w3-padding-small">
                <h4>Rooster Teeth Videos</h4>
                <h2>{summary['Videos']:,}</h2>
            </div>
            <div class="w3-col s2 w3-green w3-padding-small">
                <h4>Uploaded to Archive</h4>
                <h2>{summary['Uploaded']:,}</h2>
            </div>
            <div class="w3-col s2 w3-deep-orange w3-text-white w3-padding-small">
                <h4>Missing from Archive</h4>
                <h2>{summary['Missing']:,}</h2>
            </div>
            <div class="w3-col s2 w3-orange w3-text-white w3-padding-small">
                <h4>Incomplete Uploads</h4>
                <h2>{summary['Incomplete']:,}</h2>
            </div>
            <div class="w3-col s2 w3-red w3-padding-small">
                <h4>Removed Uploads</h4>
                <h2>{summary['Removed']:,}</h2>
            </div>
            <div class="w3-col s2 w3-green w3-padding-small">
                <h4>Archive Availability</h4>
                <h2>{summary['Availability']}</h2>
            </div>
        </div>
        <div class="w3-auto">
            <input class="w3-input w3-border w3-padding w3-section w3-half" type="text" placeholder="Filter by Title" id="search" onkeyup="search()">
            {html_table}
            <div class="w3-section w3-padding">
                <a href="{archive_search_url}" target="_blank" class="w3-hover-text-red" data-umami-event="outbound-link-click" data-umami-event-link="{archive_search_url}">Search for all episodes on Internet Archive</a>
            </div>
            <div class="w3-panel w3-border w3-light-grey w3-round-large w3-small">
                <h6>Definitions</h6>
                <ul>
                    <li><b>FIRST:</b> Exclusive content for Rooster Teeth FIRST subscribers</li>
                    <li><b>Uploaded:</b> Video has been uploaded to Internet Archive</li>
                    <li><b>Complete:</b> Internet Archive upload contains all expected items</li>
                    <li><b>Removed:</b> Internet Archive upload has been removed from the website</li>
                </ul>
            </div>          
        </div>
        <div class="w3-container w3-center w3-text-gray">
            <p><a href="https://github.com/shiruken/rt-archive" class="w3-hover-text-red" data-umami-event="outbound-link-click" data-umami-event-link="https://github.com/shiruken/rt-archive">Source Code</a></p>
        </div>
        <script>
        function search() {{
            var input, filter, table, tr, td, i;
            input = document.getElementById("search");
            filter = input.value.toUpperCase();
            table = document.getElementById("showTable");
            tbody = table.getElementsByTagName("tbody")[0];
            tr = tbody.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {{
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {{
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {{
                        tr[i].style.display = "";
                    }} else {{
                        tr[i].style.display = "none";
                    }}
                }}
            }}
        }}
        </script>
        <script defer src="https://u.csullender.com/u.js" data-website-id="43288605-948a-4723-87c1-56c6d8ab63e2" data-domains="shiruken.github.io"></script>
    </body>
    </html>
    """

    Path(f"docs/{show_slug}").mkdir(parents=True, exist_ok=True)
    with open(f"docs/{show_slug}/index.html", "w") as fp:
        fp.write(html_string)


if __name__ == "__main__":
    missing, incomplete = identify_missing_incomplete()
    generate_checklist(missing, incomplete)
    generate_website()
